1.state和props的用法和区别?
	props:组件间的数据传递
	state:管理组件自己内容的数据

2.stateless component的定义和有点是什么？
	定义:它是为了创建纯展示组件，这种组件只负责根据传入的props来展示，不涉及到要state状态的操作。具体的无状态函数式组件
	const App = () => <h1>hellow React</h1>

	优点:
		1、组件不会被实例化，整体渲染性能得到提升
		2、组件不能访问this对象
		3、组件无法访问生命周期的方法
		4、无状态组件只能访问输入的props，同样的props会得到同样的渲染结果，不会有副作用

3.写jsx语法,是怎么引入样式名称和style的
	//style.css .container{font-size:14px}
	import './style.css'	 
	<div className=container></div>
	//style引入
	const style = {
		fontSize:14px;
	}
	<div style={style}></div>
4.react render方法中 return一个组件的时候需要注意什么?
	return <div> 				return(                        return //这种就会报错

	</div>							  <div></div>	               <div></div>
								)
	//尽量使用return()，不会受到书写形式的限制
	
5.react 怎么引入一个变量
 const data = {
 "login": "gaspar1986",
  "url": "https://avatars.githubusercontent.com/u/10862773?v=3"
}
render(<Profile name={data.login} url={data.url}/>,document.getElementById('app'));

render(){
		let data = this.props;
		console.log(data);
		return (
			<div>
				<img src={data.url} alt=""/>
				<h2>{data.name}</h2>
			</div>
		)
	}
6.如何实现组件接口规范约束？
	Profile.propTypes = {
	url:PropTypes.string,
	name:PropTypes.string.isRequired
}
7.怎么设置组件默认参数
	Profile.defaultProps = {
	url:'http://www.baidu.com',
	name:'tyg'
}
8.ref是什么?怎么获取ref对应的实例
	ref:用来操作DOM元素
	this.refs.one //ref = one
9.react怎么获取DOM节点
	findDOMNode(this.refs.one)
10.react移除节点的两个方法是哪个?
//return 之前加个判断
	destroy = (e) => {
		this.setState({
			destroyed:true
		})
	}
	render(){
		if(this.state.destroyed){
			return null;
		} 
	}
//ReactDOM.unmountComponentAtNode(document.getElementById('app'));