1.介绍一下React Router

React Router是完整的React路由解决方案。
React Router保持UI与URL同步。它拥有简单的API与强大的功能，例如代码延迟加载、动态路由匹配、以及帮助建立正确的位置过渡处理


2.使用react router的时候使用那几个属性,这几个属性的是做什么的?

history  path  component

history属性用来改变url的，如果值为hashHistory的话，路径前边会有/#/字样，都是在改变哈希值，url并没有改变；如果值为browserHistory,url才真正的发生改变。

component就是用来指定当访问该路由时渲染的组件


3.使用Link组件的方法,以及它的缺点

超链接使用的Link组件，Link组件上有to属性，该属性配置具体的路由，如下：其中path是具体的路由
<Link to="/path"></link>

缺点是：直接使用Link 组件的to属性的话，会访问/目录下的所有路由，比如访问根目录/时，会匹配到/contact、/about等路由。



4.切换路由的几种方式

第一种：
1）导入browserHistory
import { Link , IndexLink,browserHistory} from 'react-router'

2)browserHistory.push(path)、browserHistory.goback(path)...

第二种：
1）App.contextTypes={
    router:React.PropTypes.object
};
export default App

2）this.context.router.push(path)

第三种：
使用link组件，在组件的to属性上配置路由。

第四种：
使用Redirect重定向组件，在组件的from和to属性上配置从哪个路由跳转到哪个路由



5.如何手动切换路由,写个例子

手动切换路由可以通过this.context.router.push(path)、browserHistory.push(path)来实现。

例子：
import React,{ Component } from 'react';
import { Link ,browserHistory} from 'react-router'
 class App extends Component{
    handleSubmit(e){
        e.preventDefault();
        const username=e.target.elements[0].value;
        const repo=e.target.elements[1].value;
        const path=`/about/${username}/${repo}`;
        this.context.router.push(path)
    }
    render(){
        return <div>
            <h1>hello react router</h1>
            <ul>
                <li>
                    <form action="" onSubmit={ this.handleSubmit.bind(this)}>
                        <input type="text" placeholder="user name"/>
                        <input type="text" placeholder="repo"/>
                        <button type="submit">go with me</button>
                    </form>
                </li>
            </ul>
        </div>
    }
}

App.contextTypes={
    router:React.PropTypes.object
};
export default App


6.怎么使组件具有context属性

比如有一个Contact组件，我们要使用它的context属性之前加上这句话
Contact.contextTypes={
  router:React.PropTypes.object
};


7.什么是函数式编程?

函数式编程就是把函数本身上升到一等公民的地位，进行编程构建。



8.什么是纯函数?怎么写一个纯函数

一个没有任何副作用，并且返回值只由输入决定的函数。所谓副作用就是，如果一个函数除了返回值之外，还会修改某些其他状态，或者与外部函数等有可观测的交互。

写一个纯函数注意三点：第一，函数不依赖外部。第二，函数不改变外部变量。第三，多次执行函数，结果只跟参数有关系。



9.什么是函数柯里化?好处是什么

柯里化函数就是，只传递函数的一部分参数来调用它，让它返回一个函数去处理剩下的参数的函数。
好处：1、参数复用：利用柯里化，我们可以固定住其中的部分参数，在调用的时候，这个参数就相当于已经被记住了，不需要再次传递，也就是我们这里说的参数复用。2、延迟执行：不断的柯里化，累积传入的参数，最后执行
函数柯里化给我们带来的是：解决问题的一种思维逻辑方式



10.说一说高阶函数与柯里化函数的区别

高阶函数就是，以一个函数为参数，同时返回一个函数作为函数的返回值的函数。
柯里化函数就是，只传递函数的一部分参数来调用它，让它返回一个函数去处理剩下的参数的函数。
柯里化函数时高阶函数的一种表现形式。










